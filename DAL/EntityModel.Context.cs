//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StoreContext : DbContext
    {
        public StoreContext()
            : base("name=StoreContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AgroCategory> AgroCategories { get; set; }
        public virtual DbSet<AgroCommodity> AgroCommodities { get; set; }
        public virtual DbSet<AgroProduct> AgroProducts { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
        public virtual DbSet<Guest> Guests { get; set; }
        public virtual DbSet<ProductView> ProductViews { get; set; }
    
        [DbFunction("StoreContext", "GetAgroProductById")]
        public virtual IQueryable<GetAgroProductById_Result> GetAgroProductById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetAgroProductById_Result>("[StoreContext].[GetAgroProductById](@id)", idParameter);
        }
    
        [DbFunction("StoreContext", "GetAgroProducts")]
        public virtual IQueryable<GetAgroProducts_Result> GetAgroProducts(string text)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetAgroProducts_Result>("[StoreContext].[GetAgroProducts](@text)", textParameter);
        }
    }
}
